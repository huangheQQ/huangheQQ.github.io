<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>huanghe</title>
    <link>https://huangheqq.github.io/</link>
    <description>Recent content on huanghe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 14 May 2021 15:47:44 +0800</lastBuildDate><atom:link href="https://huangheqq.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>多线程笔记</title>
      <link>https://huangheqq.github.io/post/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Fri, 14 May 2021 15:47:44 +0800</pubDate>
      
      <guid>https://huangheqq.github.io/post/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%AC%94%E8%AE%B0/</guid>
      <description>进程 进程就是一个应用程序 就好像QQ微信 一个进程可以有多个线程 就好像QQ 你可以和我聊天，还可以和别人聊天 迅雷多个同时下载 就是多线程
主线程结束不会造成程序结束，子线程不会结束
并发和并行 并发就是同一时刻多个任务交替执行，单核的电脑 并行就是同一时刻多个任务同时执行 多核cpu可以实现并行
线程 什么是线程？ 是由进程创建的 是进程的一个实体 线程也可以创建线程
 继承一个Thread类创建线程 实现一个Runnable接口 都是重写他的run方法 .start() 启动线程 最终会执行cat的run方法 .run() 就是一个普通的方法，没有真正的启动一个线程 会把run()方法执行完往下执行 真正实现多线程的效果 是start0() 而不是run start0()是本地方法，是jvm调用的，低层是c/c++实现 Runnable : 创建Thread对象，把实现Runnable对象放入Thread 然后 .start() 低层使用了设计模式（代理模式）  方法 yield() 礼让，不一定成功 join() 线程插队 插队的程序一但插入成功 则肯定先执行完插队的线程的所有任务
Thread.currentThread().getName()过得当然线程名字
讲子线程设置为守护线程 .setDaemon(true)
底层实现：
继承Thread vs 实现Runnable的区别   从Java的设计来看，通过继承Thread或者实现Runnable接口来创建线程本质上没用区别，
从jdk帮助文档我们可以看到Thread类本身就实现了Runnable接口
  实现Runnable接口方式更加适合多个线程共享一个资源的情况，并且避免了单继承的限制，
&amp;mdash;建议使用Runnable
T3 t3 = new T3() Thread thread01 = new Thread(t3) Thread thread02 = new Thread(t3) thread01.</description>
    </item>
    
    <item>
      <title>Blog</title>
      <link>https://huangheqq.github.io/post/blog/</link>
      <pubDate>Fri, 14 May 2021 10:07:09 +0800</pubDate>
      
      <guid>https://huangheqq.github.io/post/blog/</guid>
      <description>Get的使用  Linux常用命令
 pwd : 查看当前所有目录 cd~:切换到用户所在目录 cd/：切换到根本目录 cd dir_name/:进入dir_name目录 ls:列出清单 ls -a:列出全部清单 clear:清空屏幕 mkdir:创建目录 rm -r dir_name：删除空目录 touch file_name:创建文件 echo file_content &amp;gt; file_name :给file_name文件写入内容file_content history:查看历史操作记录 --help：查看命令帮助文档 Git环境搭建  设置用户名与邮箱（用户标识，必要的)
 #查看系统config git config --system -l #查看当前用户(global)配置 git config --global -l #安装后自己需要配置的 不然以后提交项目提交不上去 git config --global user.name &amp;#34;huanghe&amp;#34; #名称 git config --global user.email &amp;#34;2816131206@qq.com&amp;#34; #邮箱 Git项目搭建 创建本地创库的方法有两种：一种是搭建全新的仓库，另一种是克隆远程仓库
​	1，创建全新的仓库，需要用GIT管理的项目的根路径执行
#在当前目录新建一个Git代码库 $ git init 2, 执行后可用看到仅仅在项目目录多出了一个.git目录，关于版本等的所以信息都在这个目录里面
 克隆远程仓库
 1.另一种方式是克隆远程目录，由于是将远程服务器上的仓库完全镜像一份值本地</description>
    </item>
    
    <item>
      <title>介绍</title>
      <link>https://huangheqq.github.io/post/myziji/</link>
      <pubDate>Fri, 14 May 2021 10:07:09 +0800</pubDate>
      
      <guid>https://huangheqq.github.io/post/myziji/</guid>
      <description>自我介绍 我是黄河
QQ:2816131206@qq.com
上传步骤
绑定
 hugo &amp;ndash;theme=maupassant &amp;ndash;baseUrl=&amp;ldquo;https://huangheQQ.github.io&amp;rdquo; &amp;ndash;buildDrafts cd public git init git add . git commit -m &amp;ldquo;第二次&amp;rdquo; git remote add origin https://github.com/huangheQQ/huangheQQ.github.io.git git push -u origin master 这个成功了：git push -u origin master -f  </description>
    </item>
    
  </channel>
</rss>
